version: '3.8'
services:
  server:
    image: 183341720063.dkr.ecr.ap-southeast-1.amazonaws.com/cuongvuong-phoenix-com_server
    env_file:
      - .env.production
    ports:
      - '80:80'
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=cuongvuong-phoenix-com
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:

x-aws-cloudformation:
  Resources:
    # OVERRIDE: change path.
    ServerTCP80TargetGroup:
      Properties:
        HealthCheckPath: /health

    # Prevent resources in `DefaultNetwork` Security Group from being access from outside.
    # NEW.
    LoadBalancerNetwork:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow all requests via HTTPS/TCP
        Tags:
          - Key: com.docker.compose.project
            Value: cuongvuong-phoenix-com
          - Key: com.docker.compose.network
            Value: cuongvuong-phoenix-com_load-balancer
        VpcId: vpc-23cf0545
        SecurityGroupIngress:
          - IpProtocol: TCP
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: TCP
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
    # OVERRIDE.
    LoadBalancer:
      Properties:
        SecurityGroups:
          - Ref: LoadBalancerNetwork
    # NEW.
    DefaultNetworkLoadBalancerIngress:
      Type: AWS::EC2::SecurityGroupIngress
      Properties:
        Description: Allow communication between resources in default network and load balancer
        GroupId:
          Ref: DefaultNetwork
        IpProtocol: '-1'
        SourceSecurityGroupId:
          Ref: LoadBalancerNetwork
    # OVERRIDE.
    Default80Ingress:

      # HTTPS listener.
      # NEW.
    LoadBalancerTCP443Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        LoadBalancerArn:
          Ref: LoadBalancer
        Protocol: HTTPS
        Port: 443
        Certificates:
          - CertificateArn: arn:aws:acm:ap-southeast-1:183341720063:certificate/91a3c277-b238-44bc-aa1a-2fa144ad8fa2
        DefaultActions:
          - Type: forward
            ForwardConfig:
              TargetGroups:
                - TargetGroupArn:
                    Ref: ServerTCP80TargetGroup
    # NEW.
    LoadBalancerTCP80Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        LoadBalancerArn:
          Ref: LoadBalancer
        Protocol: HTTP
        Port: 80
        DefaultActions:
          - Type: redirect
            RedirectConfig:
              Protocol: HTTPS
              Port: 443
              Host: '#{host}'
              Path: '/#{path}'
              Query: '#{query}'
              StatusCode: HTTP_301
    # OVERRIDE.
    ServerTCP80Listener:
    ServerService:
      DependsOn:
        - LoadBalancerTCP443Listener
        - DbService
